@charset "UTF-8";

/* 表格RWD */

.GSMis-table-rwd th {
    white-space: nowrap;
}

.GSMis-table-rwd thead {
    display: none;
}

.tel {
    /* max-width: 8em; */
    white-space: normal !important;
}

@media all and (min-width: 992px) {
    .GSMis-table-rwd thead {
        display: table-header-group;
    }
}

.GSMis-table-rwd td {
    display: grid;
    grid-template-columns: 9em 1fr;
}

@media all and (min-width: 992px) {
    .GSMis-table-rwd td {
        display: table-cell;
    }
}

.GSMis-table-rwd td::before {
    content: attr(data-th);
    padding-right: 1em;
    margin-right: 1em;
    border-right: 1px solid rgba(51, 51, 51, 0.3);
    text-align: right;
}

@media all and (min-width: 992px) {
    .GSMis-table-rwd td::before {
        display: none;
    }
}

@media all and (min-width: 992px) {
    .GSMis-table-rwd td {
        display: table-cell;
    }
}

.GSMis-table-rwd tbody tr:nth-child(odd) {
    background-color: #efefef;
}

@media all and (min-width: 992px) {
    .GSMis-table-rwd tbody tr:nth-child(odd) {
        background-color: inherit;
    }
}


/* 分頁 */

.GSMis-pagination .page-link {
    color: inherit;
}

.GSMis-pagination .page-item.active .page-link {
    background-color: #4a4a4a;
    border-color: #4a4a4a;
}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */